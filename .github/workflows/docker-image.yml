# Análisa o código com SonarCloud
# Faz o Build da imagem
# Analisa a imagem com Trivy
# Faz push para o DockerHub
name: Ci 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonarcloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:

    runs-on: ubuntu-latest
    needs: sonarcloud 
    steps:
    - uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          adenilsonkon/api-python
        tags: |
          type=sha
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag adenilsonkon/api-python:${{ steps.meta.outputs.tags }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: adenilsonkon/api-python:${{ steps.meta.outputs.tags }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
    - name: Push the Docker image
      run: docker push adenilsonkon/api-python:${{ steps.meta.outputs.tags }}
